package com.preporukaOK.rules.rulesDonjiDeoOpste

import com.ftn.PreporukaOdevneKombinacije.model.*;
import com.ftn.PreporukaOdevneKombinacije.model.enums.*;
import com.ftn.PreporukaOdevneKombinacije.dto.*;
import com.ftn.PreporukaOdevneKombinacije.model.drlModel.*;

import java.util.List;
import java.util.ArrayList;

import accumulate com.ftn.PreporukaOdevneKombinacije.droolsFunction.SumPerClothingItem sumPerItem;

declare TipTelaIzabran
	tipTela: TipTela
end

declare TipDonjegDelaIzabran
    tipDonjeg : DonjiDeoEnum[]
end

declare PodtipDonjegDelaIzabran
    podtipDonjegDela : TipDonjegDela[]
end

declare MaterijalIzabran
	materijal: Materijal[]
end

declare DuzinaIzabrana
	duzina: DuzinaDonjegDela[]
end

declare DubinaIzabrana
	dubina: Dubina[]
end

declare BojaIntenzitetIzabran
	intenzitet: BojaIntenzitet
end

rule "A1 - Tip tela - trougao"
    salience 500
    when
        $unos : UnosNeulogovanDTO(kukovi >= ramena + 5/100 * kukovi);
    then
    	insert(new TipTelaIzabran(TipTela.TROUGAO));
        System.out.println("Tip tela - trougao");
end

rule "A2 - Tip tela - pravougaonik"
    salience 500
    when
        $unos : UnosNeulogovanDTO( ramena <= 25/100 * ramena + struk, ramena <= 5/100 * ramena + kukovi);
        not (TipTelaIzabran())
    then
    	insert(new TipTelaIzabran(TipTela.PRAVOUGAONIK));
        System.out.println("Tip tela - pravougaonik");
end

rule "A3 - Tip tela - obrnuti trougao"
    salience 500
    when
        $unos : UnosNeulogovanDTO( ramena >= kukovi + 5/100 * ramena);
        not (TipTelaIzabran())
    then
    	insert(new TipTelaIzabran(TipTela.OB_TROUGAO));
        System.out.println("Tip tela - pravougaonik");
end

rule "A4 - Tip tela - pescani sat"
     salience 500
     when
         $unos : UnosNeulogovanDTO( ramena > 25/100 * ramena + struk, ramena  <= 5/100 * ramena + kukovi);
         not (TipTelaIzabran())
     then
     	insert(new TipTelaIzabran(TipTela.PES_SAT));
         System.out.println("Tip tela - pescani sat");
 end

rule "A5 - Tip tela - krug"
     salience 490
     when
         not(TipTelaIzabran())
     then
     	insert(new TipTelaIzabran(TipTela.KRUG));
         System.out.println("Tip tela - krug");
end

rule "B1 - Tip donjeg dela ako je tip tela trougao i dresscode lezeran"
	salience 450
    no-loop
    when
        $tipTela : TipTelaIzabran(tipTela == TipTela.TROUGAO);
        $unos : UnosNeulogovanDTO(dressCode == DressCode.LEZERAN);
    then
        insert(new TipDonjegDelaIzabran(new DonjiDeoEnum[]{ DonjiDeoEnum.PANTALONE, DonjiDeoEnum.SUKNJA}));
        insert(new PodtipDonjegDelaIzabran(new TipDonjegDela[] {TipDonjegDela.FLARED,TipDonjegDela.SKINY,TipDonjegDela.PENCIL,TipDonjegDela.ALINE}));
        System.out.println("tip i podtip odece");
end

rule "B - Dodavanje bodova za tip odece"
    salience 400
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	PodtipDonjegDelaIzabran( podtipDonjegDela contains $donjiDeo.getOdecaPodTip()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("B bodovi");
end

rule "C1 - Biranje materijala ako je temperatura veća od 20 stepeni, dress code je ležeran "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(vreme == 'leto', dressCode == DressCode.LEZERAN );
    then
        insert(new MaterijalIzabran(new Materijal[] { Materijal.SVILA, Materijal.PAMUK, Materijal.TEKSAS, Materijal.LAN }));
        System.out.println("Biranje materijala odece ako je temperatura veća od 20 stepeni dress code je ležeran");
end

rule "C - Dodavanje bodova za tip odece"
    salience 350
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	MaterijalIzabran( materijal contains $donjiDeo.getMaterijal()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("C bodovi");
end

rule "D1 - Dubina i duzina ako je visina manje od 165"
	salience 300
    no-loop
    when
        $unos : UnosNeulogovanDTO(visina < 165);
    then
        insert(new DuzinaIzabrana(new DuzinaDonjegDela[]{DuzinaDonjegDela.MAXI,DuzinaDonjegDela.MINI}));
        insert(new DubinaIzabrana(new Dubina[]{Dubina.MAXI,Dubina.MIDI}));
        System.out.println("Biranje dubine suknje na osnovu visine");
end

rule "D - Dodavanje bodova za dubinu odece"
    salience 260
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	DubinaIzabrana( dubina contains $donjiDeo.getDubina()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("D bodovi");
end

rule "D - Dodavanje bodova za duzinu odece"
    salience 250
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	DuzinaIzabrana( duzina contains $donjiDeo.getDuzina()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("D bodovi");
end

rule "F1 - Izbor boje suknje ako je korisnik svetle puti, ima tip tela trougao i nizak je"
    salience 200
    no-loop
    when
        $unos : UnosNeulogovanDTO(bojaKoze == BojaKoze.SUMMER || bojaKoze == BojaKoze.SPRING || bojaKoze == BojaKoze.AUTUMN || bojaKoze == BojaKoze.WINTER, visina < 165, kukovi >= ramena + 0.15 * kukovi);
        $tipTela : TipTelaIzabran(tipTela == TipTela.TROUGAO);
    then
        insert(new BojaIntenzitetIzabran(BojaIntenzitet.TAMNA));
        System.out.println("Biranje boje suknje na osnovu tipa tela i boje koze");
end

rule "F2 - Izbor boje suknje ako je korisnik svetle puti, ima tip tela trougao i nizak je"
    salience 190
    no-loop
    when
        $unos : UnosNeulogovanDTO(bojaKoze == BojaKoze.SUMMER || bojaKoze == BojaKoze.SPRING || bojaKoze == BojaKoze.AUTUMN || bojaKoze == BojaKoze.WINTER, visina < 165, kukovi < ramena + 0.15 * kukovi);
        $tipTela : TipTelaIzabran(tipTela == TipTela.TROUGAO);
    then
        insert(new BojaIntenzitetIzabran(BojaIntenzitet.SREDNJE));
        System.out.println("Biranje boje suknje na osnovu tipa tela i boje koze");
end

rule "F - Dodavanje bodova za boju"
    salience 160
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	BojaIntenzitetIzabran( intenzitet == $donjiDeo.getBojaIntenzitet()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("F bodovi");
end

rule "G - Biranje komada prema koeficijentu preporuke"
	salience -10
	lock-on-active
    when
    	$donjiDeo : DonjiDeo();
    	 accumulate($koef : KoeficijentPreporuke($b4:Double.valueOf(bodovi * komad.getKoeficijentOdabira()) ), $ukupneVrednosti : sumPerItem($koef) );
    	Number($avg : doubleValue) from accumulate( $d : Double() from $ukupneVrednosti ,
                       	average($d) );
        $poeni : Double(this >= $avg) from accumulate(
                	KoeficijentPreporuke(komad.getId() == $donjiDeo.getId(), $b1:Double.valueOf(bodovi * komad.getKoeficijentOdabira())),
                	sum($b1)
                );
        $preporuceniKomadi : PreporuceniKomadi();
    then
        modify($preporuceniKomadi) {getPreporuceniDonjiDelovi().add(new PreporuceniDonjiDeo($donjiDeo, $poeni));}
        System.out.println($ukupneVrednosti);
    	System.out.println("G Biranje komada prema koeficijentu preporuke, izabran komad : " + $donjiDeo.getId() + " broj poena : " + $poeni + "  srednja vrednost poena : " + $avg);
end

rule "Brisanje poena nakon odabira"
	salience -20
	no-loop
	when
		$koeficijentPreporuke:KoeficijentPreporuke();
	then
		delete($koeficijentPreporuke);
end

rule "Provera uspesnosti"
	salience -30
	no-loop
    when
        preporuceniKomadi : PreporuceniKomadi( preporuceniDonjiDelovi.size > 0);
    then
    	System.out.println("Uspesno zavrsena preporuka");
end