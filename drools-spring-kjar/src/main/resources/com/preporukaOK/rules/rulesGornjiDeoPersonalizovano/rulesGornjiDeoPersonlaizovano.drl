package com.preporukaOK.rules.rulesGornjiDeoPersonalizovano

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import com.ftn.PreporukaOdevneKombinacije.model.*;
import com.ftn.PreporukaOdevneKombinacije.model.drlModel.*;
import com.ftn.PreporukaOdevneKombinacije.model.enums.*;
import com.ftn.PreporukaOdevneKombinacije.dto.*;

global Map hashMapColor

declare KoeficijentPreporuke
	bodovi: double
	komad: GornjiDeo
end

declare TipTelaIzabran
	tipTela: TipTela
end

declare PodtipOdeceIzabran
	podTip: OdecaPodTip
end

declare TipOdeceIzabran
	tip: GornjiDeoEnum[]
end

declare MaterijalIzabran
	materijal: Materijal[]
end

declare BojaIzabran
    boja: Boja
end


rule "A1 - Tip tela - trougao"
    salience 500
    when
        $user : User(kukovi >= ramena + 5/100 * kukovi);
    then
    	insert(new TipTelaIzabran(TipTela.TROUGAO));
        System.out.println("Tip tela - trougao");
end

rule "B1 - Biranje podtipa odece ako je tip tela trougao"
    salience 450
    no-loop
    when
        $tipTela : TipTelaIzabran(tipTela == TipTela.TROUGAO);
        $gornjiDeo : GornjiDeo( odecaPodTip == OdecaPodTip.SIROKA);
        $list: List( size > 0 ) from collect(GornjiDeo( odecaPodTip == OdecaPodTip.SIROKA ))
    then
    	insert(new PodtipOdeceIzabran(OdecaPodTip.SIROKA));
    	insert(new KoeficijentPreporuke(10 + 5 / $list.size(), $gornjiDeo));
        System.out.println("B1 id odece : " + $gornjiDeo.getId());
end

rule "C1 - Biranje tipa odece ako je temperatura veća od 20 stepeni, suvo je vreme i dress code je ležeran"
    salience 400
    no-loop
    when
        $unos : UnosDTO(temperatura > 20, vreme == Vreme.SUVO, dressCode == DressCode.LEZERAN );
        List( size > 0 ) from collect(GornjiDeo( odecaTip == GornjiDeoEnum.MAJICA_KRATKI || odecaTip == GornjiDeoEnum.MAJICA_BRETELE ))
    then
    	insert(new TipOdeceIzabran(new GornjiDeoEnum[]  {GornjiDeoEnum.MAJICA_KRATKI, GornjiDeoEnum.MAJICA_BRETELE} ));
        System.out.println("C1");
end

rule "C2 - Dodavanje bodova za tip odece"
    salience 380
    no-loop
    when
        TipOdeceIzabran($tip : tip);
        $gornjiDeo : GornjiDeo( odecaTip memberOf $tip);
        $list : List( size > 0 ) from collect(GornjiDeo(odecaTip memberOf $tip));
    then
    	insert(new KoeficijentPreporuke(20 + 10 / $list.size(), $gornjiDeo));
        System.out.println("C2 , id odece : " + $gornjiDeo.getId());
end


rule "D1 - Biranje materijala odece ako je temperatura veća od 20 stepeni, suvo je vreme,  dress code je ležeran  i tip odeće je majica kratkih rukava"
    salience 350
    no-loop
    when
        $unos : UnosDTO(temperatura > 20, vreme == Vreme.SUVO, dressCode == DressCode.LEZERAN );
        $tipOdece : TipOdeceIzabran( $tip : tip contains GornjiDeoEnum.MAJICA_KRATKI || tip contains GornjiDeoEnum.MAJICA_BRETELE );
        $gornjiDeo : GornjiDeo( materijal == Materijal.LAN || materijal == Materijal.PAMUK);
        $list: List( size > 0 ) from collect(GornjiDeo( materijal == Materijal.LAN || materijal == Materijal.PAMUK ))
    then
    	insert(new MaterijalIzabran(new Materijal[] { Materijal.LAN,Materijal.PAMUK }));
    	insert(new KoeficijentPreporuke(20 + 10 / $list.size(), $gornjiDeo));
        System.out.println("D1 , id odece : " + $gornjiDeo.getId());
end


rule "E1 - Biranje boje odece ako je temperatura veća od 20 stepeni i dress code je ležeran"
    no-loop
    salience (hashMapColor[$dresscode])
    when
        $unos : UnosDTO(temperatura > 20, $dresscode : dressCode, $bojeUnos : boje );
        $gornjiDeo : GornjiDeo( $b : boja == $bojeUnos.get(0));
        $list: List( size > 0 ) from collect(GornjiDeo( boja == $b ))
    then
    	insert(new BojaIzabran( $b ));
    	insert(new KoeficijentPreporuke(10 + 5 / $list.size(), $gornjiDeo));
        System.out.println("E1 , id odece : " + $gornjiDeo.getId());
end


rule "F1 - Biranje komada prema koeficijentu preporuke"
	salience -10
	no-loop
    when
    	$gornjiDeo : GornjiDeo();
    	Number($avg : doubleValue) from accumulate(
                       	KoeficijentPreporuke( $komad : komad, $b:Double.valueOf(bodovi * komad.getKoeficijentOdabira()) ),
                       	average($b) );
        $poeni : Double(this >= $avg) from accumulate(
                	KoeficijentPreporuke(komad.getId() == $gornjiDeo.getId(), $b1:Double.valueOf(bodovi * komad.getKoeficijentOdabira())),
                	sum($b1)
                );
        $preporuceniKomadi : PreporuceniKomadi();
    then
        modify($preporuceniKomadi) {getPreporuceniGornjiDelovi().add(new PreporuceniGornjiDeo($gornjiDeo, $poeni));}

    	System.out.println("F1 Biranje komada prema koeficijentu preporuke, izabran komad : " + $gornjiDeo.getId() + "  srednja vrednost poena : " + $avg);
end

rule "Brisanje poena nakon odabira"
	salience -20
	when
		$koeficijentPreporuke:KoeficijentPreporuke();
	then
		delete($koeficijentPreporuke);
end

rule "Provera uspesnosti"
	salience -30
	no-loop
    when
        preporuceniKomadi : PreporuceniKomadi( preporuceniGornjiDelovi.size > 0);
    then
    	System.out.println("Uspesno zavrsena preporuka");
end


rule "E2"
    lock-on-active
    salience(hashMapColor[$dresscode])
    when
        $unos : UnosDTO(temperatura > 20, $dresscode : dressCode );
        $gornjiDeo : GornjiDeo( $b : boja == Boja.CRNA);
        $list: List( size > 0 ) from collect(GornjiDeo( boja == Boja.CRNA ))
    then
        insert(new BojaIzabran( $b ));
       	insert(new KoeficijentPreporuke(10 + 5 / $list.size(), $gornjiDeo));
end










