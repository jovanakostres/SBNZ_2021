package com.preporukaOK.rules.rulesDDMOpste

import com.ftn.PreporukaOdevneKombinacije.model.*;
import com.ftn.PreporukaOdevneKombinacije.model.enums.*;
import com.ftn.PreporukaOdevneKombinacije.dto.*;
import com.ftn.PreporukaOdevneKombinacije.model.drlModel.*;

import java.util.List;
import java.util.ArrayList;

import accumulate com.ftn.PreporukaOdevneKombinacije.droolsFunction.SumPerClothingItem sumPerItem;

declare TipTelaIzabran
	tipTela: TipTela
end

declare TipDonjegDelaIzabran
    tipDonjeg : DonjiDeoEnum[]
end

declare PodtipDonjegDelaIzabran
    podtipDonjegDela : TipDonjegDela[]
end

declare MaterijalIzabran
	materijal: Materijal
end

declare DuzinaIzabrana
	duzina: DuzinaDonjegDela[]
end

declare DubinaIzabrana
	dubina: Dubina[]
end

declare BojaIntenzitetIzabran
	intenzitet: BojaIntenzitet
end

declare Marker
    uniqueIdentifier : String
end

rule "A1 - Tip tela - trougao"
    salience 500
    when
        $unos : UnosNeulogovanDTO(kukovi >= ramena + 5/100 * kukovi);
    then
    	insert(new TipTelaIzabran(TipTela.TROUGAO));
        System.out.println("Tip tela - trougao");
end

rule "A2 - Tip tela - pravougaonik"
    salience 500
    when
        $unos : UnosNeulogovanDTO( ramena-kukovi < 10 && ramena-kukovi>-10);
        not (TipTelaIzabran())
    then
    	insert(new TipTelaIzabran(TipTela.PRAVOUGAONIK));
        System.out.println("Tip tela - pravougaonik");
end

rule "A3 - Tip tela - obrnuti trougao"
    salience 500
    when
        $unos : UnosNeulogovanDTO( ramena >= kukovi + 5/100 * ramena);
        not (TipTelaIzabran())
    then
    	insert(new TipTelaIzabran(TipTela.OB_TROUGAO));
        System.out.println("Tip tela - ob trougao");
end

rule "A5 - Tip tela - krug"
     salience 490
     when
         not(TipTelaIzabran())
     then
     	insert(new TipTelaIzabran(TipTela.KRUG));
         System.out.println("Tip tela - krug");
end

rule "B1 - Tip donjeg dela ako je tip tela trougao"
	salience 450
    no-loop
    when
        $tipTela : TipTelaIzabran(tipTela == TipTela.TROUGAO || tipTela == TipTela.OB_TROUGAO || tipTela == TipTela.KRUG);
        $unos : UnosNeulogovanDTO(dressCode != DressCode.SPORTSKI);
    then
        insert(new TipDonjegDelaIzabran(new DonjiDeoEnum[]{ DonjiDeoEnum.PANTALONE}));
        insert(new PodtipDonjegDelaIzabran(new TipDonjegDela[] {TipDonjegDela.STRAIGHT}));
        System.out.println("b1 trougao");
end

rule "B2 - Tip donjeg dela ako je tip tela PRAVOUGAONIK"
	salience 450
    no-loop
    when
        $tipTela : TipTelaIzabran(tipTela == TipTela.PRAVOUGAONIK);
        $unos : UnosNeulogovanDTO(dressCode != DressCode.SPORTSKI);
    then
        insert(new TipDonjegDelaIzabran(new DonjiDeoEnum[]{ DonjiDeoEnum.PANTALONE, DonjiDeoEnum.SUKNJA}));
        insert(new PodtipDonjegDelaIzabran(new TipDonjegDela[] {TipDonjegDela.SKINY,TipDonjegDela.STRAIGHT}));
        System.out.println("b2 pravougaonik");
end

rule "B3 - dresscode sportski"
	salience 450
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.SPORTSKI);
    then
        insert(new TipDonjegDelaIzabran(new DonjiDeoEnum[]{ DonjiDeoEnum.TRENERKA, DonjiDeoEnum.SORC}));
        insert(new PodtipDonjegDelaIzabran(new TipDonjegDela[] {TipDonjegDela.NONE}));
        System.out.println("b5 krug");
end

rule "B - Dodavanje bodova za tip odece"
    salience 400
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	PodtipDonjegDelaIzabran( podtipDonjegDela contains $donjiDeo.getOdecaPodTip()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("B bodovi");
end

rule "C1 - 1 - Biranje materijala ako je dresscode lezeran "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.LEZERAN );
    then
        insert(new MaterijalIzabran(Materijal.POLIESTER));
        insert(new MaterijalIzabran(Materijal.PAMUK));
        insert(new MaterijalIzabran(Materijal.TEKSAS));
        insert(new MaterijalIzabran(Materijal.SOMOT));
        System.out.println("c1 lezeran");
end

rule "C1 - 2 - Biranje materijala ako je dresscode sportski "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.SPORTSKI );
    then
        insert(new MaterijalIzabran(Materijal.PAMUK));
        insert(new MaterijalIzabran(Materijal.POLIESTER));
        System.out.println("c2 sportski");
end

rule "C1 - 3 - Biranje materijala ako je dresscode formalan "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.FORMALAN );
    then
        insert(new MaterijalIzabran(Materijal.POLIESTER));
        insert(new MaterijalIzabran(Materijal.PAMUK));
        insert(new MaterijalIzabran(Materijal.TEKSAS));
        System.out.println("c3 formalan");
end

rule "C1 - 4 - Biranje materijala ako je dresscode blacktie "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.BLACKTIE );
    then
        insert(new MaterijalIzabran(Materijal.POLIESTER));
        System.out.println("c4 blacktie");
end

rule "C1 - 5 - Biranje materijala ako je dresscode izlazak "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.IZLAZAK );
    then
        insert(new MaterijalIzabran(Materijal.POLIESTER));
        insert(new MaterijalIzabran(Materijal.PAMUK));
        insert(new MaterijalIzabran(Materijal.TEKSAS));
        System.out.println("c5 izlazak");
end

rule "C2 - 1 - Biranje materijala ako je leto "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.IZLAZAK || dressCode == DressCode.LEZERAN || dressCode == DressCode.FORMALAN, vreme == 'leto' );
    then
        insert(new MaterijalIzabran(Materijal.LAN));
        System.out.println("c21 leto materijal");
end

rule "C2 - 3 - Biranje materijala ako je zima "
	salience 380
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.LEZERAN || dressCode == DressCode.FORMALAN, vreme == 'zima' );
    then
        insert(new MaterijalIzabran(Materijal.VUNA));
        System.out.println("c23 zima");
end

rule "C - Dodavanje bodova za tip odece"
    salience 350
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	MaterijalIzabran( materijal == $donjiDeo.getMaterijal()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("C bodovi");
end

rule "D1 - Duzina ako dresscode utice"
	salience 300
    no-loop
    when
        $unos : UnosNeulogovanDTO(dressCode == DressCode.BLACKTIE || dressCode == DressCode.FORMALAN);
    then
        insert(new DuzinaIzabrana(new DuzinaDonjegDela[]{DuzinaDonjegDela.MAXI}));
        insert(new Marker("E1"));
        System.out.println("e1 dresscode");
end

rule "D2-1 - Duzina ako dresscode ne utice visina nisko"
	salience 300
    no-loop
    when
        not Marker(uniqueIdentifier == "E1")
    then
        insert(new DuzinaIzabrana(new DuzinaDonjegDela[]{DuzinaDonjegDela.MAXI,DuzinaDonjegDela.MIDI}));
        System.out.println("e2 nisko");
end

rule "D - Dodavanje bodova za dubinu odece"
    salience 250
    no-loop
    when
        $donjiDeo : DonjiDeo();
        $brojponavljanja : Long( this > 0) from accumulate(
                        	DuzinaIzabrana( duzina contains $donjiDeo.getDuzina()),
                        	count(1)
                        );
    then
    	insert(new KoeficijentPreporuke(20 + 5 * $brojponavljanja, $donjiDeo));
        System.out.println("E bodovi");
end

rule "E - Biranje komada prema koeficijentu preporuke"
	salience -10
	lock-on-active
    when
    	$donjiDeo : DonjiDeo();
    	 accumulate($koef : KoeficijentPreporuke($b4:Double.valueOf(bodovi * komad.getKoeficijentOdabira()) ), $ukupneVrednosti : sumPerItem($koef) );
    	Number($avg : doubleValue) from accumulate( $d : Double() from $ukupneVrednosti ,
                       	average($d) );
        $poeni : Double(this >= $avg) from accumulate(
                	KoeficijentPreporuke(komad.getId() == $donjiDeo.getId(), $b1:Double.valueOf(bodovi * komad.getKoeficijentOdabira())),
                	sum($b1)
                );
        $preporuceniKomadi : PreporuceniKomadi();
    then
        modify($preporuceniKomadi) {getPreporuceniDonjiDelovi().add(new PreporuceniDonjiDeo($donjiDeo, $poeni));}
        System.out.println($ukupneVrednosti);
    	System.out.println("G Biranje komada prema koeficijentu preporuke, izabran komad : " + $donjiDeo.getId() + " broj poena : " + $poeni + "  srednja vrednost poena : " + $avg);
end

rule "Brisanje poena nakon odabira"
	salience -20
	no-loop
	when
		$koeficijentPreporuke:KoeficijentPreporuke();
	then
		delete($koeficijentPreporuke);
end

rule "Provera uspesnosti"
	salience -30
	no-loop
    when
        preporuceniKomadi : PreporuceniKomadi( preporuceniDonjiDelovi.size > 0);
    then
    	System.out.println("Uspesno zavrsena preporuka");
end